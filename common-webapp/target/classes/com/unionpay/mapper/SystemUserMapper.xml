<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unionpay.dao.SystemUserMapper">
  <resultMap id="BaseResultMap" type="com.unionpay.entity.SystemUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="organization_id" jdbcType="BIGINT" property="organization_id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="role_ids" jdbcType="VARCHAR" property="role_ids" />
    <result column="locked" jdbcType="BIT" property="locked" />
  </resultMap>
  <sql id="Base_Column_List">
    id, organization_id, username, password, salt, role_ids, locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.unionpay.entity.SystemUser">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user (id, organization_id, username, 
      password, salt, role_ids, 
      locked)
    values (#{id,jdbcType=BIGINT}, #{organization_id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{role_ids,jdbcType=VARCHAR}, 
      #{locked,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.unionpay.entity.SystemUser">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="organization_id != null">
        organization_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="role_ids != null">
        role_ids,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="organization_id != null">
        #{organization_id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="role_ids != null">
        #{role_ids,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unionpay.entity.SystemUser">
    update sys_user
    <set>
      <if test="organization_id != null">
        organization_id = #{organization_id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="role_ids != null">
        role_ids = #{role_ids,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unionpay.entity.SystemUser">
    update sys_user
    set organization_id = #{organization_id,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      role_ids = #{role_ids,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>